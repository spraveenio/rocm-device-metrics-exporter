//
// Copyright(C) Advanced Micro Devices, Inc. All rights reserved.
//
// You may not use this software and documentation (if any) (collectively,
// the "Materials") except in compliance with the terms and conditions of
// the Software License Agreement included with the Materials or otherwise as
// set forth in writing and signed by you and an authorized signatory of AMD.
// If you do not have a copy of the Software License Agreement, contact your
// AMD representative for a copy.
//
// You agree that you will not reverse engineer or decompile the Materials,
// in whole or in part, except as allowed by applicable law.
//
// THE MATERIALS ARE DISTRIBUTED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR
// REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//
//----------------------------------------------------------------------------
///
/// \file
/// GPU Rocprofiler utility
///
//----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: rocprofiler.proto

/*
Copyright (c) Advanced Micro Devices, Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package amdgpu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *MetricValue) Reset() {
	*x = MetricValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rocprofiler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricValue) ProtoMessage() {}

func (x *MetricValue) ProtoReflect() protoreflect.Message {
	mi := &file_rocprofiler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricValue.ProtoReflect.Descriptor instead.
func (*MetricValue) Descriptor() ([]byte, []int) {
	return file_rocprofiler_proto_rawDescGZIP(), []int{0}
}

func (x *MetricValue) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *MetricValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GpuMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpuId   string         `protobuf:"bytes,1,opt,name=GpuId,proto3" json:"GpuId,omitempty"`
	Metrics []*MetricValue `protobuf:"bytes,2,rep,name=Metrics,proto3" json:"Metrics,omitempty"`
}

func (x *GpuMetric) Reset() {
	*x = GpuMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rocprofiler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuMetric) ProtoMessage() {}

func (x *GpuMetric) ProtoReflect() protoreflect.Message {
	mi := &file_rocprofiler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuMetric.ProtoReflect.Descriptor instead.
func (*GpuMetric) Descriptor() ([]byte, []int) {
	return file_rocprofiler_proto_rawDescGZIP(), []int{1}
}

func (x *GpuMetric) GetGpuId() string {
	if x != nil {
		return x.GpuId
	}
	return ""
}

func (x *GpuMetric) GetMetrics() []*MetricValue {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GpuProfiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpuMetrics []*GpuMetric `protobuf:"bytes,1,rep,name=GpuMetrics,proto3" json:"GpuMetrics,omitempty"`
}

func (x *GpuProfiler) Reset() {
	*x = GpuProfiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rocprofiler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuProfiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuProfiler) ProtoMessage() {}

func (x *GpuProfiler) ProtoReflect() protoreflect.Message {
	mi := &file_rocprofiler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuProfiler.ProtoReflect.Descriptor instead.
func (*GpuProfiler) Descriptor() ([]byte, []int) {
	return file_rocprofiler_proto_rawDescGZIP(), []int{2}
}

func (x *GpuProfiler) GetGpuMetrics() []*GpuMetric {
	if x != nil {
		return x.GpuMetrics
	}
	return nil
}

var File_rocprofiler_proto protoreflect.FileDescriptor

var file_rocprofiler_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x6f, 0x63, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x6d, 0x64, 0x67, 0x70, 0x75, 0x22, 0x39, 0x0a, 0x0b, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x09, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x70, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x47, 0x70, 0x75, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x6d, 0x64,
	0x67, 0x70, 0x75, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x47, 0x70, 0x75, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x70, 0x75, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6d,
	0x64, 0x67, 0x70, 0x75, 0x2e, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0a,
	0x47, 0x70, 0x75, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x67, 0x65,
	0x6e, 0x2f, 0x61, 0x6d, 0x64, 0x67, 0x70, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rocprofiler_proto_rawDescOnce sync.Once
	file_rocprofiler_proto_rawDescData = file_rocprofiler_proto_rawDesc
)

func file_rocprofiler_proto_rawDescGZIP() []byte {
	file_rocprofiler_proto_rawDescOnce.Do(func() {
		file_rocprofiler_proto_rawDescData = protoimpl.X.CompressGZIP(file_rocprofiler_proto_rawDescData)
	})
	return file_rocprofiler_proto_rawDescData
}

var file_rocprofiler_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rocprofiler_proto_goTypes = []any{
	(*MetricValue)(nil), // 0: amdgpu.MetricValue
	(*GpuMetric)(nil),   // 1: amdgpu.GpuMetric
	(*GpuProfiler)(nil), // 2: amdgpu.GpuProfiler
}
var file_rocprofiler_proto_depIdxs = []int32{
	0, // 0: amdgpu.GpuMetric.Metrics:type_name -> amdgpu.MetricValue
	1, // 1: amdgpu.GpuProfiler.GpuMetrics:type_name -> amdgpu.GpuMetric
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rocprofiler_proto_init() }
func file_rocprofiler_proto_init() {
	if File_rocprofiler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rocprofiler_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MetricValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rocprofiler_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GpuMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rocprofiler_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GpuProfiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rocprofiler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rocprofiler_proto_goTypes,
		DependencyIndexes: file_rocprofiler_proto_depIdxs,
		MessageInfos:      file_rocprofiler_proto_msgTypes,
	}.Build()
	File_rocprofiler_proto = out.File
	file_rocprofiler_proto_rawDesc = nil
	file_rocprofiler_proto_goTypes = nil
	file_rocprofiler_proto_depIdxs = nil
}
