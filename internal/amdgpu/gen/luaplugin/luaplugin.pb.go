//
//Copyright (c) Advanced Micro Devices, Inc. All rights reserved.
//
//Licensed under the Apache License, Version 2.0 (the \"License\");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an \"AS IS\" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

//----------------------------------------------------------------------------
///
/// \file
/// AMD Metrics Exporter configs
///
//----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: luaplugin.proto

package luaplugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stages int32

const (
	Stages_TaskInit   Stages = 0
	Stages_TaskExit   Stages = 1
	Stages_TaskEpilog Stages = 2
)

// Enum value maps for Stages.
var (
	Stages_name = map[int32]string{
		0: "TaskInit",
		1: "TaskExit",
		2: "TaskEpilog",
	}
	Stages_value = map[string]int32{
		"TaskInit":   0,
		"TaskExit":   1,
		"TaskEpilog": 2,
	}
)

func (x Stages) Enum() *Stages {
	p := new(Stages)
	*p = x
	return p
}

func (x Stages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stages) Descriptor() protoreflect.EnumDescriptor {
	return file_luaplugin_proto_enumTypes[0].Descriptor()
}

func (Stages) Type() protoreflect.EnumType {
	return &file_luaplugin_proto_enumTypes[0]
}

func (x Stages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stages.Descriptor instead.
func (Stages) EnumDescriptor() ([]byte, []int) {
	return file_luaplugin_proto_rawDescGZIP(), []int{0}
}

type SpankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID      uint32   `protobuf:"varint,1,opt,name=JobID,proto3" json:"JobID,omitempty"`
	JobGID     uint32   `protobuf:"varint,2,opt,name=JobGID,proto3" json:"JobGID,omitempty"`
	JobUID     uint32   `protobuf:"varint,3,opt,name=JobUID,proto3" json:"JobUID,omitempty"`
	JobStepID  uint32   `protobuf:"varint,4,opt,name=JobStepID,proto3" json:"JobStepID,omitempty"`
	NNodes     uint32   `protobuf:"varint,5,opt,name=NNodes,proto3" json:"NNodes,omitempty"`
	NodeID     uint32   `protobuf:"varint,6,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	NCPus      uint32   `protobuf:"varint,7,opt,name=NCPus,proto3" json:"NCPus,omitempty"`
	TaskID     uint32   `protobuf:"varint,8,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
	TaskPID    uint32   `protobuf:"varint,9,opt,name=TaskPID,proto3" json:"TaskPID,omitempty"`
	AllocCores []string `protobuf:"bytes,10,rep,name=AllocCores,proto3" json:"AllocCores,omitempty"`
	AllocGPUs  []string `protobuf:"bytes,11,rep,name=AllocGPUs,proto3" json:"AllocGPUs,omitempty"`
	GroupID    uint32   `protobuf:"varint,12,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *SpankData) Reset() {
	*x = SpankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luaplugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpankData) ProtoMessage() {}

func (x *SpankData) ProtoReflect() protoreflect.Message {
	mi := &file_luaplugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpankData.ProtoReflect.Descriptor instead.
func (*SpankData) Descriptor() ([]byte, []int) {
	return file_luaplugin_proto_rawDescGZIP(), []int{0}
}

func (x *SpankData) GetJobID() uint32 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *SpankData) GetJobGID() uint32 {
	if x != nil {
		return x.JobGID
	}
	return 0
}

func (x *SpankData) GetJobUID() uint32 {
	if x != nil {
		return x.JobUID
	}
	return 0
}

func (x *SpankData) GetJobStepID() uint32 {
	if x != nil {
		return x.JobStepID
	}
	return 0
}

func (x *SpankData) GetNNodes() uint32 {
	if x != nil {
		return x.NNodes
	}
	return 0
}

func (x *SpankData) GetNodeID() uint32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *SpankData) GetNCPus() uint32 {
	if x != nil {
		return x.NCPus
	}
	return 0
}

func (x *SpankData) GetTaskID() uint32 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *SpankData) GetTaskPID() uint32 {
	if x != nil {
		return x.TaskPID
	}
	return 0
}

func (x *SpankData) GetAllocCores() []string {
	if x != nil {
		return x.AllocCores
	}
	return nil
}

func (x *SpankData) GetAllocGPUs() []string {
	if x != nil {
		return x.AllocGPUs
	}
	return nil
}

func (x *SpankData) GetGroupID() uint32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string     `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	UID      string     `protobuf:"bytes,2,opt,name=UID,proto3" json:"UID,omitempty"`
	GID      string     `protobuf:"bytes,3,opt,name=GID,proto3" json:"GID,omitempty"`
	Cgroup   string     `protobuf:"bytes,4,opt,name=Cgroup,proto3" json:"Cgroup,omitempty"`
	Context  string     `protobuf:"bytes,5,opt,name=Context,proto3" json:"Context,omitempty"`
	Type     Stages     `protobuf:"varint,6,opt,name=Type,proto3,enum=luaplugin.Stages" json:"Type,omitempty"`
	SData    *SpankData `protobuf:"bytes,7,opt,name=SData,proto3" json:"SData,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_luaplugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_luaplugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_luaplugin_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Notification) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *Notification) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *Notification) GetCgroup() string {
	if x != nil {
		return x.Cgroup
	}
	return ""
}

func (x *Notification) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *Notification) GetType() Stages {
	if x != nil {
		return x.Type
	}
	return Stages_TaskInit
}

func (x *Notification) GetSData() *SpankData {
	if x != nil {
		return x.SData
	}
	return nil
}

var File_luaplugin_proto protoreflect.FileDescriptor

var file_luaplugin_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x75, 0x61, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6c, 0x75, 0x61, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xbf, 0x02, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f,
	0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x47, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x4a, 0x6f, 0x62, 0x47, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x55,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4a, 0x6f, 0x62, 0x55, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x4e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x4e, 0x43, 0x50, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4e,
	0x43, 0x50, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x47,
	0x50, 0x55, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x47, 0x50, 0x55, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0xd3,
	0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x47, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6c, 0x75, 0x61, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x75, 0x61, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x53,
	0x44, 0x61, 0x74, 0x61, 0x2a, 0x34, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x70, 0x69, 0x6c, 0x6f, 0x67, 0x10, 0x02, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x65,
	0x6e, 0x2f, 0x6c, 0x75, 0x61, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_luaplugin_proto_rawDescOnce sync.Once
	file_luaplugin_proto_rawDescData = file_luaplugin_proto_rawDesc
)

func file_luaplugin_proto_rawDescGZIP() []byte {
	file_luaplugin_proto_rawDescOnce.Do(func() {
		file_luaplugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_luaplugin_proto_rawDescData)
	})
	return file_luaplugin_proto_rawDescData
}

var file_luaplugin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_luaplugin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_luaplugin_proto_goTypes = []any{
	(Stages)(0),          // 0: luaplugin.Stages
	(*SpankData)(nil),    // 1: luaplugin.SpankData
	(*Notification)(nil), // 2: luaplugin.Notification
}
var file_luaplugin_proto_depIdxs = []int32{
	0, // 0: luaplugin.Notification.Type:type_name -> luaplugin.Stages
	1, // 1: luaplugin.Notification.SData:type_name -> luaplugin.SpankData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_luaplugin_proto_init() }
func file_luaplugin_proto_init() {
	if File_luaplugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_luaplugin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SpankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_luaplugin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_luaplugin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_luaplugin_proto_goTypes,
		DependencyIndexes: file_luaplugin_proto_depIdxs,
		EnumInfos:         file_luaplugin_proto_enumTypes,
		MessageInfos:      file_luaplugin_proto_msgTypes,
	}.Build()
	File_luaplugin_proto = out.File
	file_luaplugin_proto_rawDesc = nil
	file_luaplugin_proto_goTypes = nil
	file_luaplugin_proto_depIdxs = nil
}
