/*
Copyright (c) Advanced Micro Devices, Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

//----------------------------------------------------------------------------
///
/// \file
/// protobuf specification for common types
///
//----------------------------------------------------------------------------

syntax = "proto3";

package types;
option go_package="gen/amdgpu";

// empty message
message Empty {}

// API return codes (more descriptive than protobuf enums)
enum ApiStatus {
  API_STATUS_OK                      = 0;  // success
  API_STATUS_ERR                     = 1;  // catch-all error
  API_STATUS_INVALID_ARG             = 2;  // invalid parameter
  API_STATUS_EXISTS_ALREADY          = 3;  // object exists already
  API_STATUS_OUT_OF_MEM              = 4;  // out of memory
  API_STATUS_NOT_FOUND               = 5;  // object not found
  API_STATUS_OPERATION_NOT_ALLOWED   = 6;  // operation not allowed on object
  API_STATUS_OPERATION_NOT_SUPPORTED = 7;  // operation not supported
  API_STATUS_IN_USE                  = 8;  // object in use
}

// API error codes (set in cases where ApiStatus is not API_STATUS_OK
enum ErrorCode {
  ERR_CODE_NONE                                           = 0;

  // GPU specific error codes
  ERR_CODE_GPU_CLOCK_FREQ_RANGE_INVALID                   = 4096;
  ERR_CODE_GPU_OVERDRIVE_OUT_OF_RANGE                     = 4097;
  ERR_CODE_GPU_NUM_CLOCK_FREQ_RANGE_EXCEEDED              = 4098;
  ERR_CODE_GPU_DUPLICATE_CLOCK_FREQ_RANGE                 = 4099;
  ERR_CODE_GPU_CLOCK_TYPE_FREQ_RANGE_UPDATE_NOT_SUPPORTED = 4100;

  // smi layer object specific error codes
  ERR_CODE_SMI_GPU_POWER_CAP_OUT_OF_RANGE                 = 65536;

  // catch all error code
  ERR_CODE_UNKNOWN                                        = 0x1FFFFFFF;
}
