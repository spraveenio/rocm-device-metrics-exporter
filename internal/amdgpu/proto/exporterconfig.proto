
//
// Copyright(C) Advanced Micro Devices, Inc. All rights reserved.
//
// You may not use this software and documentation (if any) (collectively,
// the "Materials") except in compliance with the terms and conditions of
// the Software License Agreement included with the Materials or otherwise as
// set forth in writing and signed by you and an authorized signatory of AMD.
// If you do not have a copy of the Software License Agreement, contact your
// AMD representative for a copy.
//
// You agree that you will not reverse engineer or decompile the Materials,
// in whole or in part, except as allowed by applicable law.
//
// THE MATERIALS ARE DISTRIBUTED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR
// REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//


//----------------------------------------------------------------------------
///
/// \file
/// AMD Metrics Exporter configs
///
//----------------------------------------------------------------------------


syntax = "proto3";
option go_package = "gen/gpumetrics"; 
package gpumetrics;

enum GPUMetricField {
    GPU_NODES_TOTAL             = 0;
    GPU_FAN_SPEED               = 1;
    GPU_AVERAGE_PACKAGE_POWER   = 2;
    GPU_EDGE_TEMPERATURE        = 3;
    GPU_JUNCTION_TEMPERATURE    = 4;
    GPU_MEMORY_TEMPERATURE      = 5;
    GPU_HBM_TEMPERATURE         = 6;
    GPU_USAGE                   = 7;
    GPU_GFX_ACTIVITY            = 8;
    GPU_MEMORY_USAGE            = 9;
    GPU_MEMORY_ACTIVITY         = 10;
    GPU_VOLTAGE                 = 11;
    PCIE_BANDWIDTH              = 12;
    GPU_ENERGY_CONSUMED         = 13;
    PCIE_REPLAY_COUNT           = 14;
    GPU_CLOCK                   = 15;
    GPU_MEMORY_CLOCK            = 16;
    PCIE_TX                     = 17;
    PCIE_RX                     = 18;
    GPU_POWER_USAGE             = 19;
    GPU_TOTAL_MEMORY            = 20;
    GPU_ECC_CORRECT_TOTAL       = 21;
    GPU_ECC_UNCORRECT_TOTAL     = 22;
    GPU_ECC_CORRECT_SDMA        = 23;
    GPU_ECC_UNCORRECT_SDMA      = 24;
    GPU_ECC_CORRECT_GFX         = 25;
    GPU_ECC_UNCORRECT_GFX       = 26;
    GPU_ECC_CORRECT_MMHUB       = 27;
    GPU_ECC_UNCORRECT_MMHUB     = 28;
    GPU_ECC_CORRECT_ATHUB       = 29;
    GPU_ECC_UNCORRECT_ATHUB     = 30;
    GPU_ECC_CORRECT_BIF         = 31;
    GPU_ECC_UNCORRECT_BIF       = 32;
    GPU_ECC_CORRECT_HDP         = 33;
    GPU_ECC_UNCORRECT_HDP       = 34;
    GPU_ECC_CORRECT_XGMI_WAFL   = 35;
    GPU_ECC_UNCORRECT_XGMI_WAFL = 36;
    GPU_ECC_CORRECT_DF          = 37;
    GPU_ECC_UNCORRECT_DF        = 38;
    GPU_ECC_CORRECT_SMN         = 39;
    GPU_ECC_UNCORRECT_SMN       = 40;
    GPU_ECC_CORRECT_SEM         = 41;
    GPU_ECC_UNCORRECT_SEM       = 42;
    GPU_ECC_CORRECT_MP0         = 43;
    GPU_ECC_UNCORRECT_MP0       = 44;
    GPU_ECC_CORRECT_MP1         = 45;
    GPU_ECC_UNCORRECT_MP1       = 46;
    GPU_ECC_CORRECT_FUSE        = 47;
    GPU_ECC_UNCORRECT_FUSE      = 48;
    GPU_ECC_CORRECT_UMC         = 49;
    GPU_ECC_UNCORRECT_UMC       = 50;
    GPU_XGMI_NBR_0_NOP_TX       = 51;
    GPU_XGMI_NBR_0_REQ_TX       = 52;
    GPU_XGMI_NBR_0_RESP_TX      = 53;
    GPU_XGMI_NBR_0_BEATS_TX     = 54;
    GPU_XGMI_NBR_1_NOP_TX       = 55;
    GPU_XGMI_NBR_1_REQ_TX       = 56;
    GPU_XGMI_NBR_1_RESP_TX      = 57;
    GPU_XGMI_NBR_1_BEATS_TX     = 58;
    GPU_XGMI_NBR_0_TX_THRPUT    = 59;
    GPU_XGMI_NBR_1_TX_THRPUT    = 60;
    GPU_XGMI_NBR_2_TX_THRPUT    = 61;
    GPU_XGMI_NBR_3_TX_THRPUT    = 62;
    GPU_XGMI_NBR_4_TX_THRPUT    = 63;
    GPU_XGMI_NBR_5_TX_THRPUT    = 64;
}

enum GPUMetricLabel {
    // mandatory field GPU_UUID cannot be disabled
    GPU_UUID        = 0;
    POD             = 1;
    NAMESPACE       = 2;
    CONTAINER       = 3;
    // mandatory SERIAL_NUMBER cannot be disabled
    SERIAL_NUMBER   = 4;
    CARD_SERIES     = 5;
    CARD_MODEL      = 6;
    CARD_VENDOR     = 7;
    DRIVER_VERSION  = 8;
    VBIOS_VERSION   = 9;
}

message GPUMetricConfig {
    // instance selector can include comma or range indices of format 0,2-3,7
    string Selector        = 1;

    // list of all GPUMetricField to be exported
    repeated string Fields = 2;

    // list of labels to be exported
    repeated string Labels = 3;

}

message MetricConfig {
    // server config port
    uint32 ServerPort         = 1;

    // GPU Metric config for export
    GPUMetricConfig GPUConfig = 2;

}
